<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: C++ | Phil Cooper-King]]></title>
  <link href="http://PhilCK.github.com/blog/categories/c-/atom.xml" rel="self"/>
  <link href="http://PhilCK.github.com/"/>
  <updated>2012-10-09T22:43:47+01:00</updated>
  <id>http://PhilCK.github.com/</id>
  <author>
    <name><![CDATA[Phil CK]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Thrid Year Group Project]]></title>
    <link href="http://PhilCK.github.com/blog/2012/09/09/group-project/"/>
    <updated>2012-09-09T21:55:00+01:00</updated>
    <id>http://PhilCK.github.com/blog/2012/09/09/group-project</id>
    <content type="html"><![CDATA[<p>As part of our 3rd year in Uni, we had todo a group project. This was mainly an exercise in working with other disciplines and clients. A small group of us wanted to create our own game rather than pick from a selection of pre-produced briefs, so we pitched the game idea to the school, and managed to pickup some artists and audio people which we needed otherwise programmer art would have been a feature of our game.</p>

<p>A wee clip of one of the levels.</p>

<iframe src="http://player.vimeo.com/video/50893418" width="500" height="375" frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>


<p>The main idea is you have no direct control over the player, but instead can morph into different objects that in-turn move you in the environment. During our final pitches Disney saw our game and showed some interest, nothings come of it yet, but it was nice to have somebody outside of the Uni show some interest in the game.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Playstation 2 FishEye]]></title>
    <link href="http://PhilCK.github.com/blog/2012/02/02/ps2-fisheye/"/>
    <updated>2012-02-02T19:55:00+00:00</updated>
    <id>http://PhilCK.github.com/blog/2012/02/02/ps2-fisheye</id>
    <content type="html"><![CDATA[<p>We were tasked with creating a 'visual effect' for the PS2 using its VCL code. This was quite interesting, I thought I'd found all the ways to crash a PS2, then another one comes along. Get your VCL code wrong, and boom!</p>

<p>I ended up thinking of it as a vertex shader, and created a fish eye type effect. Its not a try fish eye effect because I am actually moving the vertices which means you can peek around corners so to speak.</p>

<p>[pic in-coming]</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Faultline Terrain]]></title>
    <link href="http://PhilCK.github.com/blog/2012/02/01/faultline-terrain/"/>
    <updated>2012-02-01T19:58:00+00:00</updated>
    <id>http://PhilCK.github.com/blog/2012/02/01/faultline-terrain</id>
    <content type="html"><![CDATA[<p>This was an experiment of making procedural terrains using the faultline method.</p>

<iframe src="http://player.vimeo.com/video/35978061" width="500" height="281" frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>


<p>This first attempt was a little mental, the falloff for the fault size was quadratic and started very large. The result was these scary mountainous landscapes.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sublime Text C++ Build]]></title>
    <link href="http://PhilCK.github.com/blog/2012/01/13/sublime-cpp-build/"/>
    <updated>2012-01-13T22:34:00+00:00</updated>
    <id>http://PhilCK.github.com/blog/2012/01/13/sublime-cpp-build</id>
    <content type="html"><![CDATA[<p>Sublime Text is currently my editor of choice, but no build support for C++ makes me sad.</p>

<p>This gist is a very basic build for C++, its not suitable for big projects, but good to test out single file snippets.</p>

<p><div><script src='https://gist.github.com/1566100.js?file='></script>
<noscript><pre><code>C++ Sublime Text Build
======================

This builds single C++ files in Sublime Text, handy for testing small things.

Works With
----------
- OSX (Assuming xcode installed)
- Linux (Should work if g++ is installed)
- Windows (Need CL working)


Thanks to adnansky for Linux Test and Shell update.</code></pre></noscript></div>
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lua Proof Of Concept]]></title>
    <link href="http://PhilCK.github.com/blog/2011/10/01/lua-proof-of-concept/"/>
    <updated>2011-10-01T19:58:00+01:00</updated>
    <id>http://PhilCK.github.com/blog/2011/10/01/lua-proof-of-concept</id>
    <content type="html"><![CDATA[<p>As part of our group-project in uni, we looked into the possibility of using Lua embedded with our framework, which was built upon Gosu.
There was a desire to use Lua to speed up iteration speeds, and also to include non-programmer types in the development of the game.
The actual embededing of Lua and Luabind was relatively easy, the hard part came in the finicky little bits of LuaBind, and the difficulty of of debugging Lua scripts.</p>

<iframe src="http://player.vimeo.com/video/31367803" width="500" height="375" frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>


<p>We ended up ditching Lua for two reasons, its drain on my time, and the lack of interest (although initially shown) from the non-programmer's in the group to use it.</p>

<p>Iâ€™d like to revisit this some day though.</p>
]]></content>
  </entry>
  
</feed>
